heat_template_version: 2013-05-23
parameters:
  network:
    label: network
    type: string
  subnet:
    label: subnet
    type: string
  cidr_net:
    label: subnet
    type: string
  os_type:
    label: os type
    type: string
  security_group:
    label: security_group
    type: string
  keypair_name:
    label: SSH Keypair
    type: string
  flavor_name:
    type: string
    label: Instance Type (Flavor)

resources:
  postboot:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
         str_replace:
             template: |
                  #!/bin/bash
                  mkdir /etc/ansible
                  echo "[local]" >> /etc/ansible/hosts
                  echo "127.0.0.1 ansible_connection=local" >> /etc/ansible/hosts
                    cat << EOF > /etc/ansible/vars.yml
                       storage_nodes:
                          - $prefix_net0
                          - $prefix_net1
                  EOF
                  if [ "$os" == "Debian Jessie" ] ;
                  then
                  /usr/local/bin/ansible-pull -U https://github.com/dalitun/applications.git blueprint-3tiers-autoscaling/ansible/glusterfs.yml -e @/etc/ansible/vars.yml
                  else
                  ansible-pull -U https://github.com/dalitun/applications.git blueprint-3tiers-autoscaling/ansible/glusterfs.yml -e @/etc/ansible/vars.yml
                  fi
             params:
                 $os: { get_param: os_type }
                 $prefix_net: { "Fn::Replace": [ {'.0/24': '.12'}, {get_param: cidr_net} ] }
  server_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
       - config: { get_resource: postboot }


  glusterfs_port1:
      type: OS::Neutron::Port
      properties:
        network: { get_param: network }
        fixed_ips:
          - ip_address: { "Fn::Replace": [ {'.0/24': '.120'}, {get_param: cidr_net} ] }
            subnet_id: { get_param: subnet }
        security_groups:
          - { get_param: security_group }

  glusterfs_port2:
      type: OS::Neutron::Port
      properties:
        network: { get_param: network }
        fixed_ips:
          - ip_address: { "Fn::Replace": [ {'.0/24': '.121'}, {get_param: cidr_net} ] }
            subnet_id: { get_param: subnet }
        security_groups:
          - { get_param: security_group }

  gluster1:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
            template: $stack-0
            params:
              $stack: { get_param: 'OS::stack_name' }
      key_name: { get_param: keypair_name }
      image: { get_param: os_type }
      flavor: { get_param: flavor_name }
      networks:
        - port: { get_resource: glusterfs_port1 }
      user_data_format: RAW
      user_data:
        get_resource: server_init


  gluster2:
    type: OS::Nova::Server
    depends_on: gluster1
    properties:
      name:
          str_replace:
              template: $stack-1
              params:
                $stack: { get_param: 'OS::stack_name' }
      key_name: { get_param: keypair_name }
      image: { get_param: os_type }
      flavor: { get_param: flavor_name }
      networks:
        - port: { get_resource: glusterfs_port2 }
      user_data_format: RAW
      user_data:
        get_resource: server_init
